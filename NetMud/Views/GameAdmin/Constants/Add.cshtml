@using NetMud.DataStructure.SupportingClasses

@model NetMud.Models.Admin.AddEditConstantsViewModel
@{
    ViewBag.Title = "Add New Constant Value";

    var criterionDropdown = Html.DropDownList("NewCriterionTypes", Enum.GetNames(typeof(CriteriaType)).Select(rl =>
            new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(CriteriaType), rl)).ToString() })
            , htmlAttributes: new { id = "NewCriterionTypes", Style = "padding: 7px; float:left; margin-top: 10px;" }).ToString().Replace(Environment.NewLine, "");
}

<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
@{
    <section id="newCharacterForm">
        @using (Html.BeginForm("Add", "Constants", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.EditorFor(e => e.NewConstantName)

            <div class="form-group">
                <div style="display: block; padding-bottom: 10px;">
                    @Html.LabelFor(m => m.NewConstantValues, new { @class = "col-md-2 control-label" })
                    <a href="#" id="addValueRow" style="padding: 10px;">Add another...</a>
                </div>
                <div id="valueRows" style="display: block;">
                    <div class="col-md-10" style="padding-left: 10px;">
                        <span style="padding: 10px; float:left;">Constant Value: </span>@Html.TextBoxFor(m => m.NewConstantValues, new { @style = " float:left; margin-top: 10px;" })
                        <a href="#" class="removeRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a>
                    </div>
                </div>
            </div>
            <br class="clearfix" />

            <div class="form-group">
                <div style="display: block; padding-bottom: 10px;">
                    @Html.LabelFor(m => m.NewCriterionValues, new { @class = "col-md-2 control-label" })
                    <a href="#" id="addCriterionRow" style="padding: 10px;">Add another...</a>
                </div>
                <div id="criterionRows" style="display: block;">
                    <div class="col-md-10" style="padding-left: 10px;">
                        <span style="padding: 10px; float:left;">Criterion Type: </span>@Html.DropDownList("NewCriterionTypes", Enum.GetNames(typeof(CriteriaType)).Select(rl =>
                                                                                      new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(CriteriaType), rl)).ToString() })
                                                                                         , htmlAttributes: new { id = "NewCriterionTypes", Style = "padding: 7px; float:left; margin-top: 10px;" })
                        <span style="padding: 10px; float:left;">Criterion Value: </span>@Html.TextBoxFor(m => m.NewCriterionValues, new { @style = " float:left; margin-top: 10px;" })
                        <a href="#" class="removeRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a>
                    </div>
                </div>
            </div>
            <br class="clearfix" />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        }
    </section>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/HtmlUtilities.js")
}

<script type="text/javascript">
    $(document).ready(function () {
        var criterionDropdown = decodeHtml('@criterionDropdown');

        $("#addCriterionRow").click(function () {
            $("#criterionRows").append(
                '<div class="col-md-10" style="padding-left:10px;"><span style="padding: 10px; float:left;">Criterion Type: </span>' + criterionDropdown + '<span style="padding: 10px; float:left;">Criterion Value:</span><input id="NewCriterionValues" name="NewCriterionValues" type="text" value="" style="float:left; margin-top: 10px;"><a href="#" class="removeRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a></div>'
            );

            $(".removeRow").click(function () {
                $(this).parent().remove();
                return false;
            });
            return false;
        });

        $("#addValueRow").click(function () {
            $("#valueRows").append(
                '<div class="col-md-10" style="padding-left:10px;"><span style="padding: 10px; float:left;">Constant Value:</span><input id="NewConstantValues" name="NewConstantValues" type="text" value="" style="float:left; margin-top: 10px;"><a href="#" class="removeRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a></div>'
            );

            $(".removeRow").click(function () {
                $(this).parent().remove();
                return false;
            });
            return false;
        });

        $(".removeRow").click(function () {
            $(this).parent().remove();
            return false;
        });
    });
</script>