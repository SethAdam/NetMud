@using NetMud.DataStructure.Base.Supporting
@using NetMud.DataStructure.Behaviors.Automation
@using NetMud.DataStructure.Behaviors.Actionable

@model NetMud.Models.Admin.AddEditRaceViewModel
@{
    ViewBag.Title = "Add New Race";

    <section id="newCharacterForm">
        @using (Html.BeginForm("Add", "Race", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group three-column">
                @Html.EditorFor(e => e.NewName)
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewStartingLocationId", "Starting Location", Model.ValidRooms, Model.NewStartingLocationId))
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewRecallLocationId", "Recall Location", Model.ValidRooms, Model.NewRecallLocationId))
            </div>

            <div class="form-group two-column">
                @Html.EditorFor(m => m.NewVisionRangeLow)
                @Html.EditorFor(m => m.NewVisionRangeHigh)
            </div>
            <div class="form-group two-column">
                @Html.EditorFor(m => m.NewTemperatureToleranceLow)
                @Html.EditorFor(m => m.NewTemperatureToleranceHigh)
            </div>

            <div class="form-group three-column">
                @Html.LabelFor(m => m.NewBreathes, new { @class = "control-label" })
                <div>
                    @Html.DropDownList("NewBreathes", Enum.GetNames(typeof(RespiratoryType)).Select(rl =>
                        new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(RespiratoryType), rl)).ToString() })
                        , htmlAttributes: new { id = "NewBreathes", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewBreathes, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.NewDietaryNeeds, new { @class = "control-label" })
                <div>
                    @Html.DropDownList("NewDietaryNeeds", Enum.GetNames(typeof(DietType)).Select(rl =>
                          new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(DietType), rl)).ToString() })
                             , htmlAttributes: new { id = "NewDietaryNeeds", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewDietaryNeeds, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.NewTeethType, new { @class = "control-label" })
                <div>
                    @Html.DropDownList("NewTeethType", Enum.GetNames(typeof(DamageType)).Select(rl =>
                          new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString() })
                             , htmlAttributes: new { id = "NewTeethType", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewTeethType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group three-column">
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewBloodId", "Blood", Model.ValidMaterials, -1))
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewHeadId", "Head", Model.ValidObjects, -1))
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewTorsoId", "Torso", Model.ValidObjects, -1))
            </div>

            <div class="form-group two-column">
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewArmsId", "Arms", Model.ValidObjects, -1))
                @Html.EditorFor(m => m.NewArmsAmount)
            </div>

            <div class="form-group two-column">
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewLegsID", "Legs", Model.ValidObjects, -1))
                @Html.EditorFor(m => m.NewLegsAmount)
            </div>

            @Html.Partial("~/Views/GameAdmin/Race/ExtraBodyParts.cshtml", Model)

            <div class="form-group one-column">
                @Html.EditorFor(e => e.NewHelpBody)
            </div>
            @Html.Partial("SubmitButton", "Create")
        }
    </section>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}