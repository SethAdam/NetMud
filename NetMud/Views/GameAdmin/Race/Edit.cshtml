@using NetMud.DataStructure.Base.Supporting
@using NetMud.DataStructure.Behaviors.Automation
@using NetMud.DataStructure.Behaviors.Actionable

@model NetMud.Models.Admin.AddEditRaceViewModel
@{
    ViewBag.Title = "Edit Race";

    var partsDropdown = Html.DropDownList("NewExtraPartsId", Model.ValidObjects.Select(rl =>
                        new SelectListItem() { Text = rl.Name, Value = rl.ID.ToString() })
                        , htmlAttributes: new { id = "NewExtraPartsId", Style = "padding: 7px; float:left; margin-top: 10px;" }).ToString().Replace(Environment.NewLine, "");
}

@{
    <section id="newCharacterForm">
        @using (Html.BeginForm("Edit", "Race", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <input type="hidden" name="id" id="id" value="@Model.DataObject.ID" />
            <div class="form-group three-column">
                @Html.EditorFor(e => e.NewName)
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewStartingLocationId", "Starting Location", Model.ValidRooms, Model.NewStartingLocationId))
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewRecallLocationId", "Recall Location", Model.ValidRooms, Model.NewRecallLocationId))
            </div>

            <div class="form-group two-column">
                @Html.EditorFor(m => m.NewVisionRangeLow)
                @Html.EditorFor(m => m.NewVisionRangeHigh)
            </div>
            <div class="form-group two-column">
                @Html.EditorFor(m => m.NewTemperatureToleranceLow)
                @Html.EditorFor(m => m.NewTemperatureToleranceHigh)
            </div>
            <div class="form-group three-column">
                @Html.LabelFor(m => m.NewBreathes, new { @class = "control-label" })
                <div>
                    @Html.DropDownList("NewBreathes", Enum.GetNames(typeof(RespiratoryType)).Select(rl =>
                        new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(RespiratoryType), rl)).ToString(), Selected = rl.Equals(Enum.GetName(typeof(RespiratoryType), Model.NewBreathes)) })
                        , htmlAttributes: new { id = "NewBreathes", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewBreathes, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.NewDietaryNeeds, new { @class = "control-label" })
                <div>
                    @Html.DropDownList("NewDietaryNeeds", Enum.GetNames(typeof(DietType)).Select(rl =>
                          new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(DietType), rl)).ToString(), Selected = rl.Equals(Enum.GetName(typeof(DietType), Model.NewDietaryNeeds)) })
                             , htmlAttributes: new { id = "NewDietaryNeeds", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewDietaryNeeds, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(m => m.NewTeethType, new { @class = "control-label" })
                <div>
                    @Html.DropDownList("NewTeethType", Enum.GetNames(typeof(DamageType)).Select(rl =>
                          new SelectListItem() { Text = rl, Value = ((short)Enum.Parse(typeof(DamageType), rl)).ToString(), Selected = rl.Equals(Enum.GetName(typeof(DamageType), Model.NewTeethType)) })
                             , htmlAttributes: new { id = "NewTeethType", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.NewTeethType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group three-column">
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewBloodId", "Blood", Model.ValidMaterials, Model.NewBloodId))
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewHeadId", "Head", Model.ValidObjects, Model.NewHeadId))
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewTorsoId", "Torso", Model.ValidObjects, Model.NewTorsoId))
            </div>

            <div class="form-group two-column">
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewArmsId", "Arms", Model.ValidObjects, Model.NewArmsID))
                @Html.EditorFor(m => m.NewArmsAmount)
            </div>

            <div class="form-group two-column">
                @Html.Partial("BackingDataDropdown", new NetMud.Models.Admin.ReferenceDataDropdownModel("NewLegsID", "Legs", Model.ValidObjects, Model.NewLegsID))
                @Html.EditorFor(m => m.NewLegsAmount)
            </div>

            @Html.Partial("~/Views/GameAdmin/Race/ExtraBodyParts.cshtml", Model)
            
            <div class="form-group one-column">
                @Html.EditorFor(e => e.NewHelpBody)
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-9">
                    <input type="submit" value="Commit" class="btn btn-default" style="color: green; border-color: cadetblue;" />
                    @Html.ActionLink("Cancel", "ManageRaceData", "GameAdmin", new { @class = "btn btn-default", @style = "color: orange; border-color: red;" })
                </div>
            </div>
        }
    </section>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var partsDropdown = decodeHtml('@partsDropdown');

        $(document).ready(function () {
            $("#addPartsRow").click(function () {
                $("#partsRows").append(
                    '<div class="col-md-9" style="padding-left: 10px;"><span style="padding: 10px; float:left;">Name:</span><input id="NewExtraPartsName" name="NewExtraPartsName" type="text" style="float:left; margin-top: 10px;" value=""><span style="padding: 10px; float:left;">Object: </span>' + partsDropdown + '<span style="padding: 10px; float:left;">Amount:</span><input id="NewExtraPartsAmount" name="NewExtraPartsAmount" type="text" value="" style="float:left; margin-top: 10px;"><a href="#" class="removeRow" style="color: red; border: none; padding: 10px; background-color: inherit; float:left;" title="Remove this">X</a></div>'
                );

                $(".removeRow").click(function () {
                    $(this).parent().remove();
                    return false;
                });
                return false;
            });

            $(".removeRow").click(function () {
                $(this).parent().remove();
                return false;
            });
        });
    </script>
}