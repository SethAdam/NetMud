@model NetMud.Models.GameAdmin.DashboardViewModel
@{
    ViewBag.Title = "Administrative Dashboard";
}

<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Backing Data</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Rooms:</dt>
        <dd>
            @Model.Rooms.Count().ToString() [
            @Html.ActionLink("Manage", "ManageRoomData")
            @Html.ActionLink("Add", "AddRoomData") ]
        </dd>
        <dt>NPCs:</dt>
        <dd>
            @Model.NPCs.Count().ToString() [
            @Html.ActionLink("Manage", "ManageNPCData")
            @Html.ActionLink("Add", "AddNPCData") ]
        </dd>
        <dt>Inanimates:</dt>
        <dd>
            @Model.Inanimates.Count().ToString() [
            @Html.ActionLink("Manage", "ManageInanimateData")
            @Html.ActionLink("Add", "AddInanimateData") ]
        </dd>
    </dl>
    <h4>Reference Data</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Help Files:</dt>
        <dd>
            @Model.HelpFiles.Count().ToString() [
            @Html.ActionLink("Manage", "ManageHelpData")
            @Html.ActionLink("Add", "AddHelpData") ]
        </dd>
        <dt>Dimensional Models:</dt>
        <dd>
            @Model.DimensionalModels.Count().ToString() [
            @Html.ActionLink("Manage", "ManageDimensionalModelData")
            @Html.ActionLink("Add", "AddDimensionalModelData") ]
        </dd>
        <dt>Materials:</dt>
        <dd>
            @Model.Materials.Count().ToString() [
            @Html.ActionLink("Manage", "ManageMaterialData")
            @Html.ActionLink("Add", "AddMaterialData") ]
        </dd>
        <dt>Races:</dt>
        <dd>
            @Model.Races.Count().ToString() [
            @Html.ActionLink("Manage", "ManageRaceData")
            @Html.ActionLink("Add", "AddRaceData") ]
        </dd>
        <dt>Zones:</dt>
        <dd>
            @Model.Zones.Count().ToString() [
            @Html.ActionLink("Manage", "ManageZoneData")
            @Html.ActionLink("Add", "AddZoneData") ]
        </dd>
    </dl>
    <h4>Live Data</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Players:</dt>
        <dd>
            @Model.LivePlayers [
            @Html.ActionLink("Manage", "ManagePlayers") ]
        </dd>
        <dt>Rooms:</dt>
        <dd>
            @Model.LiveRooms [  ]
        </dd>
        <dt>Inanimates:</dt>
        <dd>
            @Model.LiveNPCs [  ]
        </dd>
        <dt>NPCs:</dt>
        <dd>
            @Model.LiveInanimates [  ]
        </dd>
    </dl>
    <h4>World State</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Do stuff</dt>
        <dd>
            @Html.ActionLink("Backup World", "BackupWorld", "GameAdmin", new { @class = "btn btn-default", @style = "color: green; border-color: green;" })
            @Html.ActionLink("Suspend and Restore World", "RestoreWorld", "GameAdmin", new { @class = "btn btn-default", @style = "color: red; background-color: black; border-color: red;" })
        </dd>
    </dl>

    <h4>Live Processes</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>[@Model.LiveTaskTokens.Count().ToString()] Running Threads</dt>
        <dd>
            @Html.ActionLink("Stop All", "StopAllRunningProcess", "GameAdmin", new { @class = "btn", @style = "color: red; background-color: black; border-color: red;" })
        </dd>
        @foreach (var token in Model.LiveTaskTokens)
        {
            <dt style="padding-top: 25px;">@token.Key</dt>
            if (token.Value.IsCancellationRequested)
            {
                <dd style="color:red; padding-top: 25px;">Stopping</dd>
            }
            else
            {
                <dd style="padding-top: 25px;">
                    <span style="color:green;">Running</span>
                    @Html.ActionLink("Stop", "StopRunningProcess", "GameAdmin", new { processName = token.Key }, new { @class = "btn", @style = "color: red; border-color: red;" })
                </dd>
            }
        }
    </dl>
    <h4>Communications</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>[@Model.NetMud.Websock.Servers.Count().ToString()] WebSocket Ports</dt>
        <dd>
            @Html.ActionLink("Stop All", "StopAllWebsockets", "GameAdmin", new { @class = "btn", @style = "color: red; background-color: black; border-color: red;" })
        </dd>
        @foreach (var server in Model.NetMud.Websock.Servers)
        {
            <dt style="padding-top: 25px;">@server.Port.ToString()</dt>
            if (!server.IsListening)
            {
                <dd style="color:red; padding-top: 25px;">Stopped</dd>
            }
            else
            {
                <dd style="padding-top: 25px;">
                    <span style="color:green;">Listening</span>
                    @Html.ActionLink("Stop", "StopWebSocket", "GameAdmin", new { portNumber = server.Port }, new { @class = "btn", @style = "color: red; border-color: red;" })
                </dd>
            }
        }
    </dl>
</div>
