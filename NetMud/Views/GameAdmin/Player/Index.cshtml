@model NetMud.Models.Admin.ManagePlayersViewModel
@{
    ViewBag.Title = "Manage Registered Users";
    var prevPageState = Model.CurrentPageNumber > 1 ? String.Empty : "disabled";
    var nextPageState = Model.CurrentPageNumber < Model.NumberOfPages ? String.Empty : "disabled";
}

@{
    if (Model.Items.Count() > 0)
    {
        using (Html.BeginForm("Index", "Player", FormMethod.Post, new { id = "paginationForm" }))
        {
            @Html.AntiForgeryToken()
            <nav>
                <ul class="pagination" style="float: right;">
                    <li style="float: left;">
                        <div class="col-md-9" style="width: inherit;">
                            @Html.TextBoxFor(m => m.SearchTerms, new { @class = "form-control", @style = "width: 200px;float: left;margin-right: 15px;", @title = "Search Term", @onchange = "paginationForm.submit();" })
                            @Html.TextBoxFor(m => m.ItemsPerPage, new { @class = "form-control", @style = "width: 50px;float: left;", @title = "Items Per Page", @onchange = "paginationForm.submit();" })
                        </div>
                    </li>
                    <li class="@prevPageState">
                        <button aria-label="Previous" value="@(Model.CurrentPageNumber - 1)" title="Previous" name="CurrentPageNumber"><span aria-hidden="true">&laquo;</span></button>
                    </li>
                    @for (var i = 1; i <= Model.NumberOfPages; i++)
                    {
                        if (Model.NumberOfPages > 5
                                && i != 1
                                && i != Model.NumberOfPages
                                && i > (Model.NumberOfPages / 2 + 1)
                                && i < (Model.NumberOfPages / 2 - 1))
                        {
                            continue;
                        }

                        <li>
                            <button value="@i" title="@i" name="CurrentPageNumber">@i.ToString()</button>
                        </li>
                    }
                    <li class="@nextPageState">
                        <button aria-label="Next" value="@(Model.CurrentPageNumber + 1)" title="Next" name="CurrentPageNumber"><span aria-hidden="true">&raquo;</span></button>
                    </li>
                </ul>
            </nav>
        }
        @Html.ValidationMessageFor(m => m.ItemsPerPage, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(m => m.SearchTerms, "", new { @class = "text-danger" })
    
        using (Html.BeginForm("Remove", "Player"))
        {
            @Html.AntiForgeryToken()
            <table class="table">
                <tbody>


                    @foreach (var obj in Model.CurrentPageOfItems)
                    {
                        <tr>
                            <td>@obj.Id</td>
                            <td>@obj.GameAccount.GlobalIdentityHandle</td>
                            <td>@obj.Email</td>
                            <td>@String.Join(",", obj.Roles.Select(rol => Model.ValidRoles.First(vR => vR.Id.Equals(rol.RoleId)).Name))</td>
                            <td>
                                <div>
                                    @Html.Partial("RemoveDataItem", @obj.ID)
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }

    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}