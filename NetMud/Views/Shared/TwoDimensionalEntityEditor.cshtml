@model NetMud.Models.Admin.TwoDimensionalEntityEditViewModel
@{
    var materialsDropdown = Html.DropDownList("ModelPartMaterials", Model.ValidMaterials.Select(rl => new SelectListItem()
    {
        Text = rl.Name,
        Value = rl.ID.ToString()
    }), htmlAttributes: new { id = "ModelPartMaterials", @class = "form-control" }).ToString().Replace(Environment.NewLine, "");

    var isAdd = Model.ModelDataObject == null;
}
<br class="clearfix" />
<div class="form-group one-column">
    @Html.LabelFor(m => m.DimensionalModelId, new { @class = "control-label" })
    <div>
        @Html.DropDownList("DimensionalModelId", Model.ValidModels.Select(rl =>
                                                                new SelectListItem() { Text = rl.Name, Value = rl.ID.ToString(), Selected = rl.ID.Equals(Model.DimensionalModelId) })
                                                                , htmlAttributes: new { id = "DimensionalModelId", Style = "padding: 7px; float:left;" })
        @Html.ValidationMessageFor(m => m.DimensionalModelId, "", new { @class = "text-danger" })
    </div>
</div>
@Html.Partial("DimensionalEntityEditor", Model)
<br class="clearfix" />
<div class="form-group one-column">
    <label class="control-label" id="lblModelParts">Model Parts</label>
    <div>&nbsp;</div>
</div>
<div id="modelPartRows">
    @if (!isAdd)
    {
        foreach (var container in Model.ModelDataObject.Composition)
        {
            <div class="form-group two-column">
                @Html.LabelFor(m => m.ModelPartNames, new { @class = "control-label" })
                <div>
                    <input id="ModelPartNames" name="ModelPartNames" class="form-control" type="text" value="@container.Key">
                </div>
                @Html.LabelFor(m => m.ModelPartMaterials, new { @class = "control-label" })
                <div>
                    @Html.DropDownList("ModelPartMaterials", Model.ValidMaterials.Select(rl =>
                                                                new SelectListItem() { Text = rl.Name, Value = rl.ID.ToString(), Selected = rl.Equals(container.Value) })
                                                                , htmlAttributes: new { id = "ModelPartMaterials", @class = "form-control" })
                </div>
            </div>
        }
    }
</div>
<br class="clearfix" />

<script type="text/javascript">
    var materialsDropdown = decodeHtml('@materialsDropdown');
    var isAdd = '@isAdd' ? "true" : "false";

    $(document).ready(function () {
        if (isAdd = "true")
            GetNewDimModDeets();

        $("#DimensionalModelId").change(function () {
            GetNewDimModDeets();
        });
    });

    function GetNewDimModDeets() {
        $.ajax({
            url: "/api/AdminDataApi/GetDimensionalData/" + $("#DimensionalModelId").val()
                , async: false
                , success: function (data) {
                    $("#modelPartRows").html('');

                    $.each(data, function (key, name) {
                        $("#modelPartRows").append(
                            '<div class="form-group two-column" id="modelPartRows"><label class="control-label">Part Name:</label><div><input id="ModelPartNames" name="ModelPartNames" class="form-control" type="text" value="' + name + '"></div><label class="control-label">Material: </label><div>' + materialsDropdown + '</div></div>'
                        );
                    })
                }
        });
    };
</script>